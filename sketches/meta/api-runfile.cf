

# environment common bundles

# environment ef51ba192a3dfe76f23605c3c03bd6e8
bundle common ef51ba192a3dfe76f23605c3c03bd6e8
{
  vars:
      "activated" string => "--'activated' value passed as a class function--";
      "env_vars" slist => { "activated", "test", "verbose" };
      "test" string => "";
      "verbose" string => "";
  classes:
      "runenv_ef51ba192a3dfe76f23605c3c03bd6e8_activated" and => { classmatch("solaris.*") };
      "runenv_ef51ba192a3dfe76f23605c3c03bd6e8_test" expression => "!any";
      "runenv_ef51ba192a3dfe76f23605c3c03bd6e8_verbose" expression => "!any";
}


# activation data
bundle common cfsketch_g
{
  vars:
      # Files that need to be loaded for the activated sketches and
      # their dependencies.
      "inputs" slist => { "sketches/libraries/dclib/library.cf", "sketches/libraries/copbl/cfengine_stdlib.cf", "sketches/system/set_hostname/main.cf" };
}

bundle agent cfsketch_run
{
  vars:

      # array 'metadata' from definition sketch metadata, activation __dummy_001_System_set_hostname_set
      "__dummy_001_System_set_hostname_set_metadata[activation][identifier]" string => "dummy";
      "__dummy_001_System_set_hostname_set_metadata[activation][timestamp]" string => "1368143624";
      "__dummy_001_System_set_hostname_set_metadata[api][][type]" string => "bundle_options";
      "__dummy_001_System_set_hostname_set_metadata[api][domainname][type]" string => "return";
      "__dummy_001_System_set_hostname_set_metadata[api][hostname][type]" string => "return";
      "__dummy_001_System_set_hostname_set_metadata[api][metadata][type]" string => "metadata";
      "__dummy_001_System_set_hostname_set_metadata[api][runenv][type]" string => "environment";
      "__dummy_001_System_set_hostname_set_metadata[authors]" slist => { "Nick Anderson <nick@cmdln.org>", "Ted Zlatanov <tzz@lifelogs.com>" };
      "__dummy_001_System_set_hostname_set_metadata[bundle_options][single_use]" string => "1";
      "__dummy_001_System_set_hostname_set_metadata[depends]" slist => { "CFEngine::dclib", "CFEngine::stdlib" };
      "__dummy_001_System_set_hostname_set_metadata[license]" string => "MIT";
      "__dummy_001_System_set_hostname_set_metadata[location]" string => "/opt/cfengine/userworkdir/test/masterfiles/sketches/system/set_hostname";
      "__dummy_001_System_set_hostname_set_metadata[manifest]" slist => { "README.md", "changelog", "main.cf", "params/example.json", "test.cf" };
      "__dummy_001_System_set_hostname_set_metadata[manifest_cf]" slist => { "main.cf", "test.cf" };
      "__dummy_001_System_set_hostname_set_metadata[manifest_docs]" slist => { "README.md" };
      "__dummy_001_System_set_hostname_set_metadata[manifest_exe]" slist => { "cf_null" };
      "__dummy_001_System_set_hostname_set_metadata[manifest_extra]" slist => { "changelog", "params/example.json" };
      "__dummy_001_System_set_hostname_set_metadata[manifest_test]" slist => { "cf_null" };
      "__dummy_001_System_set_hostname_set_metadata[name]" string => "System::set_hostname";
      "__dummy_001_System_set_hostname_set_metadata[tags]" slist => { "cfdc", "enterprise_compatible" };
      "__dummy_001_System_set_hostname_set_metadata[version]" string => "1.05.2";

  methods:
    any::
      "cfsketch_g" usebundle => "cfsketch_g";
      "ef51ba192a3dfe76f23605c3c03bd6e8" usebundle => "ef51ba192a3dfe76f23605c3c03bd6e8";

    runenv_ef51ba192a3dfe76f23605c3c03bd6e8_activated::
      "__dummy_001_System_set_hostname_set" usebundle => cfdc_hostname:set("ef51ba192a3dfe76f23605c3c03bd6e8", "default:cfsketch_run.__dummy_001_System_set_hostname_set_metadata", "dummyhost", "dummydomain"), ifvarclass => "(darwin|debian|gentoo|redhat)", useresult => "return___dummy_001_System_set_hostname_set";

  reports:
    inform_mode::
      "activation __dummy_001_System_set_hostname_set returned hostname = $(return___dummy_001_System_set_hostname_set[hostname])";
      "activation __dummy_001_System_set_hostname_set returned domainname = $(return___dummy_001_System_set_hostname_set[domainname])";
      "activation __dummy_001_System_set_hostname_set could not run because it requires classes (darwin|debian|gentoo|redhat)" ifvarclass => "inform_mode.!((darwin|debian|gentoo|redhat))";
}
